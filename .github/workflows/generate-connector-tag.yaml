name: "Publish Version"
on:
  workflow_call:
    secrets:
      CONNECTORS_KEY:
        required: true
      DISCORD_NOTIFIER_URL:
        required: true

jobs:

  loading_pr_data:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.keyword.outputs.result }}
      next_version: ${{ steps.versionament.outputs.version }}
    steps:
      - name: Checking out the repository
        id: keyword
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CONNECTORS_KEY }}
          result-encoding: string
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              per_page: 100
            });

            reviews.sort((a, b) =>
              new Date(b.submitted_at) - new Date(a.submitted_at)
            );

            let encontrou = false;
            for (const review of reviews) {
              const body = (review.body || '').toLowerCase();
              if (body.includes('major')) {
                return "major";
              }
              if (body.includes('minor')) {
                return "minor";
              }
            }
            return "patch";
      - name: Next Version
        run: |
          echo "Versionament: ${{ steps.keyword.outputs.result }}"

      - name: Checking versionament
        id: versionament
        env:
          GITHUB_TOKEN: ${{ secrets.CONNECTORS_KEY }}
        uses: tecmise/actions/.github/actions/versionament@main

      - name: Show versionament
        run: |
          echo "Major: ${{ steps.versionament.outputs.major }}"
          echo "Minor: ${{ steps.versionament.outputs.minor }}"
          echo "Patch: ${{ steps.versionament.outputs.patch }}"

      - name: Next Patch
        id: versionament
        if: ${{ needs.loading_pr_data.outputs.result == 'patch'}}
        run: |
          echo "version=v${{ steps.versionament.outputs.major }}.${{ steps.versionament.outputs.minor }}.(${{ steps.versionament.outputs.patch }} + 1)" >> $GITHUB_OUTPUT
      - name: Next Minor
        id: versionament
        if: ${{ needs.loading_pr_data.outputs.result == 'minor'}}
        run: |
          echo "version=v${{ steps.versionament.outputs.major }}.(${{ steps.versionament.outputs.minor }} + 1).0" >> $GITHUB_OUTPUT
      - name: Next Major
        id: versionament
        if: ${{ needs.loading_pr_data.outputs.result == 'major'}}
        run: |
          echo "version=v(${{ steps.versionament.outputs.major }} + 1).0.0" >> $GITHUB_OUTPUT

  genrate-version:
    name: "Generate Version"
    runs-on: ubuntu-latest
    needs: loading_pr_data
    steps:
      - name: Checkout completo com tags
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Create & Push Patch Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch --tags
          git checkout master
          git pull origin master

          git tag -a "${{ needs.loading_pr_data.outputs.next_version }}" -m "Release ${{ needs.loading_pr_data.outputs.next_version }}"
          git push origin "${{ needs.loading_pr_data.outputs.next_version }}"
