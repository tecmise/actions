name: "Publish Version"
on:
  workflow_call:
    secrets:
      CONNECTORS_KEY:
        required: true
      DISCORD_NOTIFIER_URL:
        required: true

jobs:
  loading_pr_data:
    name: "Loading PR Data"
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.keyword.outputs.result }}
      patch: ${{ steps.patch.outputs.version }}
      minor: ${{ steps.minor.outputs.version }}
      major: ${{ steps.major.outputs.version }}
    steps:
      - name: Checking out the repository
        id: keyword
        uses: actions/github-script@v8
        with:
          token: ${{ secrets.CONNECTORS_KEY }}
          result-encoding: string
          script: |
            const prNumber = context.payload.pull_request.number;
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              per_page: 100
            });

            reviews.sort((a, b) =>
              new Date(b.submitted_at) - new Date(a.submitted_at)
            );

            let encontrou = false;
            for (const review of reviews) {
              const body = (review.body || '').toLowerCase();
              if (body.includes('major')) {
                return "major";
              }
              if (body.includes('minor')) {
                return "minor";
              }
            }
            return "patch";
      - name: Next Version
        run: |
          echo "Versionament: ${{ steps.keyword.outputs.result }}"

      - name: Checking versionament
        id: versionament
        env:
          GITHUB_TOKEN: ${{ secrets.CONNECTORS_KEY }}
        uses: tecmise/actions/.github/actions/versionament@main

      - name: Next Patch
        id: patch
        run: |
          PATCH="${{ steps.versionament.outputs.patch }}"
          if [ "${{ steps.keyword.outputs.result }}" == "patch" ]; then
            PATCH=$((PATCH + 1))
          elif [ "${{ steps.keyword.outputs.result }}" == "minor" ] || [ "${{ steps.keyword.outputs.result }}" == "major" ]; then
            PATCH=0
          fi
          echo "version=$PATCH" >> $GITHUB_OUTPUT

      - name: Next Minor
        id: minor
        run: |
          MINOR="${{ steps.versionament.outputs.minor }}"
          if [ "${{ steps.keyword.outputs.result }}" == "minor" ]; then
            MINOR=$((MINOR + 1))
          elif [ "${{ steps.keyword.outputs.result }}" == "major" ]; then
            MINOR=0
          fi
          echo "version=$MINOR" >> $GITHUB_OUTPUT

      - name: Next Major
        id: major
        run: |
          MAJOR="${{ steps.versionament.outputs.major }}"
          if [ "${{ steps.keyword.outputs.result }}" == "major" ]; then
            MAJOR=$((MAJOR + 1))
          fi
          echo "version=$MAJOR" >> $GITHUB_OUTPUT

      - name: Show final version
        run: |
          echo "Final Version: ${{ steps.major.outputs.version }}.${{ steps.minor.outputs.version }}.${{ steps.patch.outputs.version }}"         


  genmerate-version:
    name: "Generate Version"
    runs-on: ubuntu-latest
    needs: loading_pr_data
    steps:
      - name: Criar tag via API do GitHub
        uses: actions/github-script@v8
        with:
          token: ${{ secrets.CONNECTORS_KEY }}
          script: |
            const { data: refData } = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/master'
            });
            
            const masterSHA = refData.object.sha;
            
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/v${{ needs.loading_pr_data.outputs.major }}.${{ needs.loading_pr_data.outputs.minor }}.${{ needs.loading_pr_data.outputs.patch }}`,
              sha: masterSHA
            });

      - name: Send Notification
        uses: tecmise/actions/.github/actions/discord-notifier@v3.1.2
        with:
          title: 'ðŸ”— Novo connector ${{ github.event.repository.name }} (v${{ needs.loading_pr_data.outputs.major }}.${{ needs.loading_pr_data.outputs.minor }}.${{ needs.loading_pr_data.outputs.patch }}) ðŸ”—'
          message: 'Atualizem seus repositorios com a nova tag, o projeto versaionado estÃ¡ como privado para download sera necessario utilizar proxy local ou chave ssh.'
          severity: 'info'
          discord-webhook-url: "${{ secrets.DISCORD_NOTIFIER_URL }}"
          fields:
            PR:"${{ steps.create_pr.outputs.PR_URL }}"
            Number:"${{ steps.create_pr.outputs.PR_NUMBER }}"