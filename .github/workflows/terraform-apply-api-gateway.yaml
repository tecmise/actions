
name: Terraform Apply Api Gateway

on:
  workflow_call:
    secrets:
      ROOT_RESOURCE_ID:
        required: true
      REST_API_ID:
        required: true
      INVOKE_URI:
        required: true
      AUTHORIZER_ID:
        required: true
      CORS_ORIGIN_DOMAIN:
        required: true
    inputs:
      bucket_name:
        description: "'S3 Bucket name for Terraform state'"
        required: true
        type: string
      routes_file:
        required: true
        type: string
      aws_environment:
        description: 'Environment for the workflow'
        required: false
        type: string
        default: 's4s'
      aws_region:
        required: false
        type: string
        default: 'us-east-1'


jobs:
  generate-files:
    name: Generate Files for API Gateway
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create files
      uses: tecmise/actions/.github/actions/generate-terraform-api-gateway@v2.0.0
      with:
        routes_file: '.github/ingress/routes.json'
        bucket_name: ${{ inputs.bucket_name }}


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: api-gateway-files
        path: ${{ github.run_number }}

  exposing-routes-plan:
    name: Terraform Plan for API Gateway
    environment: ${{ github.ref_name }}
    env:
      TF_VAR_root_resource_id: ${{ secrets.ROOT_RESOURCE_ID }}
      TF_VAR_rest_api_id: ${{ secrets.REST_API_ID }}
      TF_VAR_invoke_uri: ${{ secrets.INVOKE_URI }}
      TF_VAR_authorizer_id: ${{ secrets.AUTHORIZER_ID }}
      TF_VAR_cors_origin_domain: ${{ secrets.CORS_ORIGIN_DOMAIN }}
    needs:
      - generate-files
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: api-gateway-files

    - name: Show files
      run: |
        ls -ltra 

    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - uses: hashicorp/setup-terraform@v3

    - name: Authenticate on AWS
      uses: tecmise/actions/.github/actions/aws-authenticate@main
      with:
        category: ${{ inputs.aws_environment }}
        aws_accounts: ${{ vars.AWS_ACCOUNTS }}
        aws_region: ${{ inputs.aws_region }}

    - name: Prepare Terraform plugin cache dir
      run: mkdir -p ~/.terraform.d/plugin-cache
      shell: bash

    - name: Cache Terraform providers & modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.terraform.d/plugin-cache
          terraform/.terraform
        key: ${{ runner.os }}-terraform-${{ github.event.repository.name }}-${{ hashFiles('terraform.lock.hcl') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Terraform Init
      shell: bash
      run: terraform init

    - name: Terraform Plan
      shell: bash
      run: terraform plan

  exposing-routes-apply:
    name: Terraform Apply for API Gateway
    environment: ${{ github.ref_name }}
    env:
      TF_VAR_root_resource_id: ${{ secrets.ROOT_RESOURCE_ID }}
      TF_VAR_rest_api_id: ${{ secrets.REST_API_ID }}
      TF_VAR_invoke_uri: ${{ secrets.INVOKE_URI }}
      TF_VAR_authorizer_id: ${{ secrets.AUTHORIZER_ID }}
      TF_VAR_cors_origin_domain: ${{ secrets.CORS_ORIGIN_DOMAIN }}
    needs:
      - generate-files
      - exposing-routes-plan
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: api-gateway-files

    - name: Show files
      run: |
        ls -ltra 

    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - uses: hashicorp/setup-terraform@v3

    - name: Authenticate on AWS
      uses: tecmise/actions/.github/actions/aws-authenticate@main
      with:
        category: ${{ inputs.aws_environment }}
        aws_accounts: ${{ vars.AWS_ACCOUNTS }}
        aws_region: ${{ inputs.aws_region }}

    - name: Prepare Terraform plugin cache dir
      run: mkdir -p ~/.terraform.d/plugin-cache
      shell: bash

    - name: Cache Terraform providers & modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.terraform.d/plugin-cache
          terraform/.terraform
        key: ${{ runner.os }}-terraform-${{ github.event.repository.name }}-${{ hashFiles('terraform.lock.hcl') }}
        restore-keys: |
          ${{ runner.os }}-terraform-

    - name: Terraform Init
      shell: bash
      run: terraform init

    - name: Terraform Apply
      shell: bash
      run: terraform apply -auto-approve
