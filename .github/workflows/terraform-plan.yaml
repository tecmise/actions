name: Terraform Init

on:
  workflow_call:
    inputs:
      runner_name:
        required: true
        type: string
      runner_category:
        required: true
        type: string
      terraform_directory:
        required: false
        type: string
        default: ''
      aws_region:
        required: false
        type: string
        default: 'us-east-1'
      artifact_vars:
        required: false
        type: string
        default: 'parameters'


jobs:
  plan:
    name: Initialize
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    #    runs-on: ['${{ inputs.runner_name }}', '${{ inputs.runner_category }}', "self-hosted", "linux", "x64", "amazon"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - uses: hashicorp/setup-terraform@v3
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      if: ${{ inputs.runner_category == 's4s' }}
      with:
        role-to-assume: arn:aws:iam::${{ fromJson(vars.AWS_ACCOUNTS).s4s[github.ref_name] }}:role/github-actions-role
        role-session-name: github-actions-role
        aws-region: ${{ inputs.aws_region }}
    - name: Prepare Terraform plugin cache dir
      if: ${{ inputs.terraform_directory != '' }}
      working-directory: ${{ inputs.terraform_directory }}
      run: mkdir -p ~/.terraform.d/plugin-cache
      shell: bash
    - name: Prepare Terraform plugin cache dir root
      if: ${{ inputs.terraform_directory == '' }}
      working-directory: ${{ inputs.terraform_directory }}
      run: mkdir -p ~/.terraform.d/plugin-cache
      shell: bash
    - name: Cache Terraform providers & modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.terraform.d/plugin-cache
          terraform/.terraform
        key: ${{ runner.os }}-terraform-${{ github.event.repository.name }}-${{ hashFiles('terraform/terraform.lock.hcl') }}
        restore-keys: |
          ${{ runner.os }}-terraform-
    - name: Terraform Init
      if: ${{ inputs.terraform_directory != '' }}
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: terraform init -backend-config=bucket=${{ fromJson(vars.AWS_BUCKETS_TERRAFORM).s4s[github.ref_name] }}

    - name: Terraform Init
      if: ${{ inputs.terraform_directory == '' }}
      shell: bash
      run: terraform init -backend-config=bucket=${{ fromJson(vars.AWS_BUCKETS_TERRAFORM).s4s[github.ref_name] }}

    - name: Download Terraform variables
      uses:  actions/download-artifact@v4
      with:
        name: ${{ inputs.artifact_vars }}
        path: ${{ inputs.terraform_directory }}

    - name: Terraform Plan
      if: ${{ inputs.terraform_directory != '' }}
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: terraform plan

    - name: Terraform Plan
      if: ${{ inputs.terraform_directory == '' }}
      shell: bash
      run: terraform plan