name: Building Maven

on:
  workflow_call:
    inputs:
      hashcode:
        description: 'Hashcode'
        required: true
        type: string
      runner_name:
        required: true
        type: string
      runner_category:
        required: true
        type: string
      java_version:
        required: false
        type: string
        default: '18'
      aws_region:
        required: false
        type: string
        default: 'us-east-1'
      aws_environment:
        description: 'Environment for the workflow'
        required: false
        type: string
        default: 's4s'



jobs:

  building:
    name: Build
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    #    runs-on: ['${{ inputs.runner_name }}', '${{ inputs.runner_category }}', "self-hosted", "linux", "x64", "amazon"]
    outputs:
      md5: ${{ steps.calculate-md5.outputs.md5 }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ inputs.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: '${{ inputs.java_version }}'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Maven build
        run: mvn -B clean package -DskipTests

      - name: Refactoring jar name
        working-directory: target
        run: mv *.original app.jar


      - name: Calculate MD5
        id: calculate-md5
        run: |
          MD5=$(md5sum target/app.jar | cut -d ' ' -f 1)
          echo "md5=$MD5" >> "$GITHUB_OUTPUT"

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: jar
          path: target

  publishing:
    name: Publish
    environment: ${{ github.ref_name }}
    runs-on: 'ubuntu-latest'
    needs:
      - building
    steps:

      - name: Authenticate on AWS
        uses: tecmise/actions/.github/actions/aws-authenticate@main
        with:
          category: ${{ inputs.aws_environment }}
          aws_accounts: ${{ vars.AWS_ACCOUNTS }}
          aws_region: ${{ inputs.aws_region }}

      - name: Put parameter in SSM Parameter Store
        run: |
          aws ssm put-parameter --name "/versions/${{ github.event.repository.name }}/hashcode" --value "${{ inputs.hashcode }}" --type String --overwrite

      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: jar

      - name: Upload artifact to S3
        if: ${{ inputs.runner_category == 's4s' }}
        run: aws s3 cp app.jar s3://${{ fromJson(vars.AWS_BUCKETS_LAMBDA).s4s[github.ref_name] }}/${{ github.event.repository.name }}/${{ inputs.hashcode }}/app.jar
