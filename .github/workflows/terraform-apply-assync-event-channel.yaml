
name: Create Assyncrounous Event Channel

on:
  workflow_call:
    inputs:
      bucket_name:
        description: "'S3 Bucket name for Terraform state'"
        required: true
        type: string
      entities_file:
        required: true
        type: string
      aws_environment:
        description: 'Environment for the workflow'
        required: false
        type: string
        default: 's4s'
      aws_region:
        required: false
        type: string
        default: 'us-east-1'


jobs:
  generate-file:
    name: Generate Files for API Gateway
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Move file
      shell: bash
      run: |
        ls -ltra

    - name: Move file
      shell: bash
      run: |
          mv ./${{ inputs.entities_file }} entities.json

    - name: upload entities file
      uses: actions/upload-artifact@v4
      with:
        name: entities-file
        path: entities.json

  terraform-plan:
    name: Terraform Plan
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs:
      - generate-file
    steps:

    - name: Checkout script repository
      uses: actions/checkout@v4
      with:
        repository: 'tecmise/actions'
        path: code_internal

    - name: download entities
      uses: actions/download-artifact@v4
      with:
          name: entities-file

    - name: Move file
      shell: bash
      run: |
        mv entities.json ./code_internal/terraform/assync-event-channel/entities.json 


    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - uses: hashicorp/setup-terraform@v3

    - name: Authenticate on AWS
      uses: tecmise/actions/.github/actions/aws-authenticate@v4.0.0
      with:
        category: ${{ inputs.aws_environment }}
        aws_accounts: ${{ vars.AWS_ACCOUNTS }}
        aws_region: ${{ inputs.aws_region }}

    - name: Prepare Terraform plugin cache dir
      run: mkdir -p ~/.terraform.d/plugin-cache
      shell: bash


    - name: terraform init
      working-directory: code_internal/terraform/assync-event-channel
      shell: bash
      run: |
        terraform init -backend-config=bucket=${{ inputs.bucket_name }} -backend-config=key=assync-event-channel/${{ github.event.repository.name }}.tfstate
    
    - name: Terraform Plan
      working-directory: code_internal/terraform/assync-event-channel
      shell: bash
      env:
        TF_VAR_application: "${{ github.event.repository.name }}"
        TF_VAR_file_name: "entities.json"
      run: terraform plan

  terraform-apply:
    name: Terraform Apply
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs:
      - terraform-plan
    steps:

    - name: Checkout script repository
      uses: actions/checkout@v4
      with:
        repository: 'tecmise/actions'
        path: code_internal

    - name: download entities
      uses: actions/download-artifact@v4
      with:
          name: entities-file

    - name: Move file
      shell: bash
      run: |
        mv entities.json ./code_internal/terraform/assync-event-channel/entities.json 


    - uses: actions/setup-node@v4
      with:
        node-version: '20'

    - uses: hashicorp/setup-terraform@v3

    - name: Authenticate on AWS
      uses: tecmise/actions/.github/actions/aws-authenticate@v4.0.0
      with:
        category: ${{ inputs.aws_environment }}
        aws_accounts: ${{ vars.AWS_ACCOUNTS }}
        aws_region: ${{ inputs.aws_region }}

    - name: Prepare Terraform plugin cache dir
      run: mkdir -p ~/.terraform.d/plugin-cache
      shell: bash

    - name: Terraform Init
      working-directory: code_internal/terraform/assync-event-channel
      shell: bash
      run: |
        terraform init -backend-config=bucket=${{ inputs.bucket_name }} -backend-config=key=assync-event-channel/${{ github.event.repository.name }}.tfstate

    - name: Terraform Plan
      working-directory: code_internal/terraform/assync-event-channel
      shell: bash
      env:
        TF_VAR_application: "${{ github.event.repository.name }}"
        TF_VAR_file_name: "entities.json"
      run: terraform apply -auto-approve