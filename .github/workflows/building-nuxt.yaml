name: Building Go

on:
  workflow_call:
    inputs:
      runner_name:
        required: true
        type: string
      runner_category:
        required: true
        type: string
      npm_version:
        required: false
        type: string
        default: '20'
      npm_script_build:
        required: false
        type: string
        default: 'generate'
      aws_environment:
        description: 'Environment for the workflow'
        required: false
        type: string
        default: 's4s'
jobs:

  building:
    name: Building
    runs-on: ['${{ inputs.runner_name }}', '${{ inputs.runner_category }}', "self-hosted", "linux", "x64", "amazon"]
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "${{ inputs.npm_version }}"
          cache: 'npm'

      - name: npm install
        run: npm install

      - name: npm run build
        run: npm run ${{ inputs.npm_script_build }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist
          retention-days: 1


  publishing:
    name: Publishing
    runs-on: ubuntu-latest
    needs: [ building ]
    environment: ${{ github.ref_name }}
    permissions:
      id-token: write
      contents: read
    steps:

      - name: Authenticate on AWS
        uses: tecmise/actions/.github/actions/aws-authenticate@main
        with:
          category: ${{ inputs.aws_environment }}
          aws_accounts: ${{ vars.AWS_ACCOUNTS }}
          aws_region: ${{ inputs.aws_region }}



      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: build-files

      - name: Deploy to S3
        run: aws s3 sync . s3://${{ vars.S3_DEPLOY_BUCKET }}/${{ github.event.repository.name }}/${{ github.sha }}/dist

      - name: Put parameter in SSM Parameter Store
        run: aws ssm put-parameter --name "/versions/${{ github.event.repository.name }}/hashcode" --value "${{ github.sha }}" --type String --overwrite

