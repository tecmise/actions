name: Versionament
inputs:
  aws_region:
    description: 'Aws region'
    required: true
    default: 'us-east-1'

runs:
  using: composite
  steps:

  - name: configure aws credentials
    uses: aws-actions/configure-aws-credentials@v4
    if: ${{ inputs.runner_category == 's4s' }}
    with:
      role-to-assume: arn:aws:iam::${{ fromJson(vars.AWS_ACCOUNTS).s4s[github.ref_name] }}:role/github-actions-role
      role-session-name: github-actions-role
      aws-region: ${{ inputs.aws_region }}


  - name: "Generate Terraform file"
    run: |
      # Buscar parâmetros diretamente e processar em um único passo
      aws ssm get-parameters-by-path --path "/versions/${{ github.event.repository.name }}/" --recursive --with-decryption --region us-east-1 > parameters.json
      
      # Iniciar o arquivo Terraform
      echo 'variable "versionament" {' > versions.tf
      echo '  type = object({' >> versions.tf
      
      # Processar os parâmetros para gerar as definições de tipo
      jq -r '.Parameters[] | .Name' parameters.json | while read -r name; do
      # Extrair o sufixo do nome (após a última barra)
      suffix=$(echo "$name" | awk -F'/' '{print $NF}')
      echo "    $suffix = string" >> versions.tf
      done
      
      echo '  })' >> versions.tf
      echo '  default = {' >> versions.tf
      
      # Processar os parâmetros para gerar os valores padrão
      jq -r '.Parameters[] | .Name + "=" + .Value' parameters.json | while read -r line; do
      # Extrair o sufixo do nome e o valor
      name=$(echo "$line" | cut -d'=' -f1)
      value=$(echo "$line" | cut -d'=' -f2-)
      suffix=$(echo "$name" | awk -F'/' '{print $NF}')
      echo "    $suffix = \"$value\"" >> versions.tf
      done
      
      echo '  }' >> versions.tf
      echo '}' >> versions.tf